class Solution {
    public int[] productExceptSelf(int[] nums) {
        int l = nums.length;
        //placeholders
        int left = 1; //contains everything from left of current number
        int right = 1; //contains everything from right of current number
        int[] answer = new int[l];
        
        for (int i = 0; i < l; i++) answer[i] = 1;
        
        //divided into 2 parts i and j
        for (int i = 0, j = l - 1; i < l - 1; i++, j--) {
            //left is multiplied with index i
            left *= nums[i];
            //right is multiplied with index j
            right *= nums[j];
            //put answer of left and right into resceptive elements
            answer[i + 1] *= left;
            answer[j - 1] *= right;
        }
        
        return answer;
    }
}

/* brute force method
 int[] answer = new int[nums.length]; //array to put answer
        
        //iterate through nums
        for (int i = 0; i < nums.length; i++) {
            int x = 1; //placeholder to put product
            
            //nested for loop
            for (int j = 0; j < nums.length; j++) {
                if (i == j) continue; //if they are the same index, move on
                x *= nums[j];//x is multiplied by nums[j]
            }
            answer[i] = x;//put x into answer array
        }
        
        return answer;
*/
