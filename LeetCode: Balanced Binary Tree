/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private boolean ans = true;
    
    public boolean isBalanced(TreeNode root) {
        balance(root);
        return ans;
    }
    
    //method to find balance
    public int balance(TreeNode root) {
        //if root is itself, return root
        if (root == null) return 0;

        //find balance of left and right
        int left = balance(root.left);
        int right = balance(root.right);
        
        //absolute val to check if height is no more than 1
        if (Math.abs(left - right) > 1) {
            //if greater, its false
            ans = false;
        }
        return Math.max(left, right) + 1;
    }
}
